 # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 #
 # Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 #
 # The contents of this file are subject to the terms of either the GNU
 # General Public License Version 2 only ("GPL") or the Common Development
 # and Distribution License("CDDL") (collectively, the "License").  You
 # may not use this file except in compliance with the License. You can obtain
 # a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 # or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 # language governing permissions and limitations under the License.
 #
 # When distributing the software, include this License Header Notice in each
 # file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 # Sun designates this particular file as subject to the "Classpath" exception
 # as provided by Sun in the GPL Version 2 section of the License file that
 # accompanied this code.  If applicable, add the following below the License
 # Header, with the fields enclosed by brackets [] replaced by your own
 # identifying information: "Portions Copyrighted [year]
 # [name of copyright owner]"
 #
 # Contributor(s):
 #
 # If you wish your version of this file to be governed by only the CDDL or
 # only the GPL Version 2, indicate your decision by adding "[Contributor]
 # elects to include this software in this distribution under the [CDDL or GPL
 # Version 2] license."  If you don't indicate a single choice of license, a
 # recipient has the option to distribute your version of this file under
 # either the CDDL, the GPL Version 2 or to extend the choice of license to
 # its licensees as provided above.  However, if you add GPL Version 2 code
 # and therefore, elected the GPL Version 2 license, then the option applies
 # only if the new code is made subject to such option by the copyright
 # holder.
 #


# ==============================================================================
# SPECIFICATION DEFINED MESSAGES
# ==============================================================================


# ==============================================================================
# Component Errors
# ==============================================================================

javax.faces.component.UIInput.CONVERSION={0}: Se produjo un error al convertir el valor en el campo {0}.
javax.faces.component.UIInput.REQUIRED=Este valor es necesario.
javax.faces.component.UIInput.UPDATE={0}: Se produjo un error en el procesamiento de la informaci\u00f3n presentada.
javax.faces.component.UISelectOne.INVALID={0}: Validaci\u00f3n de error: informaci\u00f3n no v\u00e1lida.
javax.faces.component.UISelectMany.INVALID={0}: Validaci\u00f3n de error: informaci\u00f3n no v\u00e1lida.

# ==============================================================================
# Converter Errors
# ==============================================================================
javax.faces.converter.BigDecimalConverter.DECIMAL={2}: ''{0}''debe ser un n\u00famero decimal.
javax.faces.converter.BigDecimalConverter.DECIMAL_detail={2}: ''{0}''debe ser un n\u00famero decimal compuesta por cero o m\u00e1s d\u00edgitos, que puede ser seguido por el punto decimal y una parte fraccional. Ejemplo: {1}
javax.faces.converter.BigIntegerConverter.BIGINTEGER={2}: ''{0}''debe ser un n\u00famero compuesto por uno o m\u00e1s d\u00edgitos.
javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail={2}: ''{0}''debe ser un n\u00famero compuesto por uno o m\u00e1s d\u00edgitos. Ejemplo: {1}
javax.faces.converter.BooleanConverter.BOOLEAN={1}: ''{0}''debe ser 'true' o 'false'.
javax.faces.converter.BooleanConverter.BOOLEAN_detail={1}: ''{0}''debe ser 'true' o 'false'. Diferentes valores de "verdadero" ser\u00e1 considerado como 'false'.
javax.faces.converter.ByteConverter.BYTE={2}: ''{0}''debe ser un n\u00famero entre 0 y 255.
javax.faces.converter.ByteConverter.BYTE_detail={2}: ''{0}''debe ser un n\u00famero entre 0 y 255. Ejemplo: {1}
javax.faces.converter.CharacterConverter.CHARACTER={1}: ''{0}''debe ser un car\u00e1cter v\u00e1lido.
javax.faces.converter.CharacterConverter.CHARACTER_detail={1}: ''{0}''debe ser un car\u00e1cter ASCII v\u00e1lido.
javax.faces.converter.DateTimeConverter.DATE={2}: ''{0}''no puede ser interpretado como una fecha.
javax.faces.converter.DateTimeConverter.DATE_detail={2}: ''{0}''no puede ser interpretado como una fecha. Ejemplo: {1}
javax.faces.converter.DateTimeConverter.TIME={2}: ''{0}''no se puede interpretar como horas.
javax.faces.converter.DateTimeConverter.TIME_detail={2}: ''{0}''no se puede interpretar como horas. Ejemplo: {1}
javax.faces.converter.DateTimeConverter.DATETIME={2}: ''{0}''no se puede interpretar como la fecha y la hora.
javax.faces.converter.DateTimeConverter.DATETIME_detail={2}: ''{0}''no se puede interpretar como la fecha y la hora. Ejemplo: {1}
javax.faces.converter.DateTimeConverter.PATTERN_TYPE={1}: "patr\u00f3n" un atributo o un "tipo" se debe especificar para convertir el valor''{0}''.
javax.faces.converter.DoubleConverter.DOUBLE={2}: ''{0}''debe ser un n\u00famero compuesto por uno o m\u00e1s d\u00edgitos.
javax.faces.converter.DoubleConverter.DOUBLE_detail={2}: ''{0}''debe ser un n\u00famero entre 4.9E-324 y en el ejemplo 1.7976931348623157E308: {1}
javax.faces.converter.EnumConverter.ENUM={2}: ''{0}''debe ser convertible a enumeraci\u00f3n.
javax.faces.converter.EnumConverter.ENUM_detail={2}: ''{0}''debe ser convertible a enumeraci\u00f3n de la enumeraci\u00f3n que contiene la constante {1}''.''
javax.faces.converter.EnumConverter.ENUM_NO_CLASS={1}: ''{0}''debe ser convertible a enumeraci\u00f3n de la enumeraci\u00f3n, pero no la clase de enumeraci\u00f3n fue proporcionada.
javax.faces.converter.EnumConverter.ENUM_NO_CLASS_detail={1}: ''{0}''debe ser convertible a enumeraci\u00f3n de la enumeraci\u00f3n, pero no la clase de enumeraci\u00f3n fue proporcionada.
javax.faces.converter.FloatConverter.FLOAT={2}: ''{0}''debe ser un n\u00famero compuesto por uno o m\u00e1s d\u00edgitos.
javax.faces.converter.FloatConverter.FLOAT_detail={2}: ''{0}''debe ser un n\u00famero entre 1.4e-45 y en el ejemplo 3.4028235E38: {1}
javax.faces.converter.IntegerConverter.INTEGER={2}: ''{0}''debe ser un n\u00famero compuesto por uno o m\u00e1s d\u00edgitos.
javax.faces.converter.IntegerConverter.INTEGER_detail={2}: ''{0}''debe ser un n\u00famero entre -2147483648 y 2147483647 Ejemplo: {1}
javax.faces.converter.LongConverter.LONG={2}: ''{0}''debe ser un n\u00famero compuesto por uno o m\u00e1s d\u00edgitos.
javax.faces.converter.LongConverter.LONG_detail={2}: ''{0}''debe ser un n\u00famero entre -9223372036854775808 y 9223372036854775807 Ejemplo: {1}
javax.faces.converter.NumberConverter.CURRENCY={2}: ''{0}''no se puede interpretar como un valor monetario.
javax.faces.converter.NumberConverter.CURRENCY_detail={2}: ''{0}''no se puede interpretar como un valor monetario. Ejemplo: {1}
javax.faces.converter.NumberConverter.PERCENT={2}: ''{0}''no se puede interpretar como un valor porcentual.
javax.faces.converter.NumberConverter.PERCENT_detail={2}: ''{0}''no se puede interpretar como un valor porcentual. Ejemplo: {1}
javax.faces.converter.NumberConverter.NUMBER={2}: ''{0}''no es un n\u00famero.
javax.faces.converter.NumberConverter.NUMBER_detail={2}: ''{0}''no es un n\u00famero. Ejemplo: {1}
javax.faces.converter.NumberConverter.PATTERN={2}: ''{0}''no es un n\u00famero de serie.
javax.faces.converter.NumberConverter.PATTERN_detail={2}: ''{0}''no es un n\u00famero de serie. Ejemplo: {1}
javax.faces.converter.ShortConverter.SHORT={2}: ''{0}''debe ser un n\u00famero compuesto por uno o m\u00e1s d\u00edgitos.
javax.faces.converter.ShortConverter.SHORT_detail={2}: ''{0}''debe ser un n\u00famero entre -32768 y 32767 Ejemplo: {1}
javax.faces.converter.STRING={1}: no se puede convertir''{0}''para la cadena.


# ==============================================================================
# Validator Errors
# ==============================================================================

javax.faces.validator.NOT_IN_RANGE=Error de validaci\u00f3n: El valor del atributo especificado debe ser entre {0} y {1}.
javax.faces.validator.DoubleRangeValidator.MAXIMUM={1}: Error de validaci\u00f3n: El valor m\u00e1ximo admisible es ''{0}''.
javax.faces.validator.DoubleRangeValidator.MINIMUM={1}: Error de validaci\u00f3n: El valor m\u00ednimo permitido es ''{0}''.
javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE={2}: Error de validaci\u00f3n: El valor del atributo especificado debe ser entre {0} y {1}.
javax.faces.validator.DoubleRangeValidator.TYPE={0}: Error de validaci\u00f3n: El valor no es del tipo correcto.
javax.faces.validator.LengthValidator.MAXIMUM={1}: Error de validaci\u00f3n: El valor m\u00e1ximo admisible es ''{0}''.
javax.faces.validator.LengthValidator.MINIMUM={1}: Error de validaci\u00f3n: El valor m\u00ednimo permitido es ''{0}''.
javax.faces.validator.LongRangeValidator.MAXIMUM={1}: Error de validaci\u00f3n: El valor m\u00e1ximo admisible es ''{0}''.
javax.faces.validator.LongRangeValidator.MINIMUM={1}: Error de validaci\u00f3n: El valor m\u00ednimo permitido es ''{0}''.
javax.faces.validator.LongRangeValidator.NOT_IN_RANGE={2}: Error de validaci\u00f3n: El valor del atributo especificado debe ser entre {0} y {1}.
javax.faces.validator.LongRangeValidator.TYPE={0}: Error de validaci\u00f3n: El valor no es del tipo correcto.

# ==============================================================================
# RichCalendar
# ==============================================================================
RICH_CALENDAR_APPLY_LABEL=Seleccione
RICH_CALENDAR_TODAY_LABEL=Hoy
RICH_CALENDAR_CLOSE_LABEL=Cerrar
RICH_CALENDAR_OK_LABEL=OK
RICH_CALENDAR_CLEAN_LABEL=Borrar
RICH_CALENDAR_CANCEL_LABEL=Cancelar
